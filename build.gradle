buildscript {    repositories {        jcenter()        maven { url 'http://repo.spring.io/snapshot' }        maven { url 'http://repo.spring.io/milestone' }    }    dependencies {        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.BUILD-SNAPSHOT'    }}apply plugin: 'java'apply plugin: 'org.springframework.boot'dependencies {    compile("org.springframework.boot:spring-boot-starter-web")    testCompile("org.springframework.boot:spring-boot-starter-test")}//*******bootRun 任务指定jvm参数,仅仅为了本地测试****//bootRun {    addResources = true    jvmArgs = [            "-server",            "-Xmx512m",            "-XX:MetaspaceSize=64m",            "-XX:MaxMetaspaceSize=128m",            "-Xdebug",            "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=10001",  //远程调试端口开启            "-Dspring.profiles.active=test",  //指定环境            "-Dspring.devtools.restart.enabled=false",  //不使用springboot restart功能    ]}//*******运行集成测试****//intTest {    systemProperties = [            'spring.config.location': 'classpath:application.properties,classpath:gns-client.properties,classpath:rmb-client.properties',//指定spring boot 配置文件            'mumble.log.home'       : './logs', //测试输出日志目录            'mumble.test'           : 'true'    //标识是测试任务    ]}//*******运行单元测试****//unitTest {    systemProperties = [            'spring.config.location': 'classpath:application.properties,classpath:gns-client.properties,classpath:rmb-client.properties',//指定spring boot 配置文件            'mumble.log.home'       : './logs', //测试输出日志目录            'mumble.test'           : 'true'    //标识是测试任务    ]}